# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  errors:
    unused_element: error
    unused_import: error
    unused_local_variable: error
    dead_code: error
    invalid_annotation_target: error
    missing_required_param: error
    missing_return: error
    unnecessary_null_in_if_null_operators: error
    prefer_const_constructors: error
    prefer_const_literals_to_create_immutables: error
    prefer_final_locals: error
    prefer_final_fields: error
    avoid_print: error
    avoid_empty_else: error
    avoid_relative_lib_imports: error
    avoid_slow_async_io: error
    avoid_types_as_parameter_names: error
    avoid_unused_constructor_parameters: error
    avoid_void_async: error
    cancel_subscriptions: error
    directives_ordering: error
    empty_catches: error
    empty_constructor_bodies: error
    library_names: error
    library_prefixes: error
    no_duplicate_case_values: error
    null_check_on_nullable_type_parameter: error
    prefer_conditional_assignment: error
    prefer_contains: error
    prefer_equal_for_default_values: error
    prefer_expression_function_bodies: error
    prefer_final_parameters: error
    prefer_for_elements_to_map_fromIterable: error
    prefer_generic_function_type_aliases: error
    prefer_if_elements_to_conditional_expressions: error
    prefer_inlined_adds: error
    prefer_is_empty: error
    prefer_is_not_empty: error
    prefer_iterable_whereType: error
    prefer_single_quotes: error
    prefer_spread_collections: error
    recursive_getters: error
    slash_for_doc_comments: error
    sort_child_properties_last: error
    type_init_formals: error
    unnecessary_brace_in_string_interps: error
    unnecessary_const: error
    unnecessary_getters_setters: error
    unnecessary_lambdas: error
    unnecessary_new: error
    unnecessary_null_aware_assignments: error
    unnecessary_overrides: error
    unnecessary_parenthesis: error
    unnecessary_statements: error
    unnecessary_string_interpolations: error
    unnecessary_this: error
    unrelated_type_equality_checks: error
    use_rethrow_when_possible: error
    valid_regexps: error

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

linter:
  rules:
    - always_declare_return_types
    - avoid_empty_else
    - avoid_print
    - avoid_relative_lib_imports
    - avoid_returning_null_for_void
    - avoid_types_as_parameter_names
    - avoid_unused_constructor_parameters
    - cancel_subscriptions
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - library_names
    - library_prefixes
    - no_duplicate_case_values
    - null_check_on_nullable_type_parameter
    - prefer_const_constructors
    - prefer_const_declarations
    - prefer_final_fields
    - prefer_final_locals
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_single_quotes
    - slash_for_doc_comments
    - type_init_formals
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_new
    - unnecessary_null_in_if_null_operators
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_rethrow_when_possible
    - valid_regexps
